<?xml version="1.0" encoding="UTF-8"?>

<!-- ICE61 warning can be ignored since same version upgrades used for testing only -->
<!-- See https://docs.microsoft.com/en-us/windows/win32/msi/ice61 -->
<!-- ICE69 warning can be ignored since referenced executable file is always installed -->
<!-- See https://docs.microsoft.com/en-us/windows/win32/msi/ice69 -->
<!-- ICE91 error supressed since this is a per user only installation -->
<!-- See https://docs.microsoft.com/en-us/windows/win32/msi/ice91 -->

<!-- Variables for unformatted attributes in Directory, Property, Shortcut -->
<!--<?define AssemblyFileVersion = "!(bind.FileVersion.MainExecutableFile)"?>-->
<?define CompanyName = "martindes01"?>
<?define ProductName = "Gonzales"?>
<?define DonationBaseURL = "https://www.paypal.me/martindes01"?>
<?define DonationFullURL = "$(var.DonationBaseURL)/4.99"?>

<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi" xmlns:util="http://schemas.microsoft.com/wix/UtilExtension">
	<!-- This element creates an msi file -->
  <Product Id="*" UpgradeCode="61d30396-58a4-4727-8680-e015a1e66d0d" Version="1.0.0" Language="1033" Name="$(var.ProductName)" Manufacturer="$(var.CompanyName)">
    
    <!-- Properties about package to be placed in Summary Information Stream -->
    <Package InstallerVersion="200" Compressed="yes" InstallScope="perUser" Comments="Copyright Â© martindes01 2019" />

    <!-- If installation of upgrade product fails, roll back removal of installed product -->
    <!-- Same version upgrades used for testing only -->
		<MajorUpgrade Schedule="afterInstallInitialize" AllowSameVersionUpgrades="yes" DowngradeErrorMessage="A newer version of [ProductName] is already installed." />
		
    <!-- Instruct binder to embed cabinets in product -->
    <MediaTemplate EmbedCab="yes" />

    <!-- Define directory structure -->
		<Directory Id="TARGETDIR" Name="SourceDir">
      <!-- The full path to the Roaming folder for the current user -->
      <Directory Id="AppDataFolder">
        <Directory Id="AppDataManufacturerFolder" Name="$(var.CompanyName)">
				  <Directory Id="APPLICATIONROOTDIRECTORY" Name="$(var.ProductName)" />
        </Directory>
			</Directory>
      <!-- The full path to the Program Menu folder -->
      <Directory Id="ProgramMenuFolder">
        <Directory Id="ProgramMenuAppFolder" Name="$(var.CompanyName) $(var.ProductName)" />
      </Directory>
		</Directory>

    <!-- Add components to package -->
    <!-- Root components -->
    <DirectoryRef Id="TARGETDIR">
      <!-- Registry key to run program on system startup -->
			<Component Id="StartupRegistryKey" Guid="*">
        <RegistryValue Root="HKCU" Key="SOFTWARE\Microsoft\Windows\CurrentVersion\Run" Name="[Manufacturer][ProductName]" Type="string" Value="&quot;[#MainExecutableFile]&quot; --startup" KeyPath="yes" />
			</Component>
    </DirectoryRef>
    <!-- Installation folder components -->
    <DirectoryRef Id="APPLICATIONROOTDIRECTORY">
      <!-- App executable file -->
      <!-- Components with files and registry keypaths cannot use auto generated guids -->
			<Component Id="MainExecutable" Guid="7B5C17F8-BB13-43CB-8F49-543F4612D35F">
        <File Id="MainExecutableFile" Source="$(var.Gonzales.TargetPath)" Checksum="yes" />
        <!-- Remove app data folders on uninstall (only if empty) -->
        <RemoveFolder Id="RemoveApplicationRootDirectory" Directory="APPLICATIONROOTDIRECTORY" On="uninstall" />
        <RemoveFolder Id="RemoveAppDataManufacturerFolder" Directory="AppDataManufacturerFolder" On="uninstall" />
        <!-- Registry key to act as key path for this component -->
        <RegistryValue Root="HKCU" Key="Software\[Manufacturer]\[ProductName]\Components" Name="MainExecutable" Type="integer" Value="1" KeyPath="yes" />
			</Component>
    </DirectoryRef>
    <!-- Start menu components -->
    <DirectoryRef Id="ProgramMenuAppFolder">
      <!-- Start menu items -->
      <Component Id="StartMenuItems" Guid="*">
        <Shortcut Id="StartMenuAppShortcut" Name="$(var.ProductName)" Description="Create and manage mouse pointer profiles" Target="[#MainExecutableFile]" WorkingDirectory="APPLICATIONROOTDIRECTORY" />
        <util:InternetShortcut Id="StartMenuDonationShortcut" Name="Donate" Type="url" Target="$(var.DonationFullURL)" />
        <!-- Remove start menu app folder on uninstall (only if empty) -->
        <RemoveFolder Id="RemoveProgramMenuAppFolder" Directory="ProgramMenuAppFolder" On="uninstall"/>
        <!-- Registry key to act as key path for this component -->
        <RegistryValue Root="HKCU" Key="Software\[Manufacturer]\[ProductName]\Components" Name="StartMenuItems" Type="integer" Value="1" KeyPath="yes" />
      </Component>
    </DirectoryRef>

    <!-- Instruct WiX to install the components -->
    <Feature Id="MainApplication" Title="Main Application" Level="1">
      <ComponentRef Id="MainExecutable" />
      <ComponentRef Id="StartMenuItems" />
      <ComponentRef Id="StartupRegistryKey" />
    </Feature>
    
    <!-- Include application launch custom actions -->
    <CustomAction Id="LaunchApplication" BinaryKey="WixCA" DllEntry="WixShellExec" Impersonate="yes" />
    <CustomAction Id="LaunchBrowser" BinaryKey="WixCA" DllEntry="WixShellExec" Impersonate="yes" />
    <CustomAction Id="SetWixShellExecTarget1" Property="WixShellExecTarget" Value="[#MainExecutableFile]" />
    <CustomAction Id="SetWixShellExecTarget2" Property="WixShellExecTarget" Value="$(var.DonationFullURL)" />
    
    <!-- Add UI to installer -->
    <!-- See https://wixtoolset.org//documentation/manual/v3/wixui/dialog_reference/wixui_installdir.html -->
    <WixVariable Id="WixUILicenseRtf" Value="$(var.SolutionDir)LICENSE.rtf" />
    <Property Id="WIXUI_INSTALLDIR" Value="APPLICATIONROOTDIRECTORY" />
    <Property Id="WIXUI_EXITDIALOGOPTIONALTEXT" Value="Thank you for installing this product. Consider supporting the developer at $(var.DonationBaseURL)." />
    <Property Id="WIXUI_EXITDIALOGOPTIONALCHECKBOXTEXT" Value="Launch $(var.ProductName)" />
    <Property Id="WIXUI_EXITDIALOGOPTIONALCHECKBOX2TEXT" Value="Donate to $(var.CompanyName) via PayPal (this will launch your default browser)" />
    <UI>
      <!-- Reference custom UI -->
      <!-- See https://github.com/wixtoolset/wix3/tree/develop/src/ext/UIExtension/wixlib -->
      <UIRef Id="WixUI_CustomInstallDir" />
      <!-- Trigger application launch on installation exit -->
      <!-- Only run custom action if first checkbox is checked and application not previously installed -->
      <Publish Dialog="CustomExitDialog" Control="Finish" Event="DoAction" Value="SetWixShellExecTarget1">
        WIXUI_EXITDIALOGOPTIONALCHECKBOX = 1 and NOT Installed
      </Publish>
      <Publish Dialog="CustomExitDialog" Control="Finish" Event="DoAction" Value="LaunchApplication">
        WIXUI_EXITDIALOGOPTIONALCHECKBOX = 1 and NOT Installed
      </Publish>
      <!-- Trigger browser launch on installation exit -->
      <!-- Only run custom action if second checkbox is checked and application not previously installed -->
      <Publish Dialog="CustomExitDialog" Control="Finish" Event="DoAction" Value="SetWixShellExecTarget2">
        WIXUI_EXITDIALOGOPTIONALCHECKBOX2 = 1 and NOT Installed
      </Publish>
      <Publish Dialog="CustomExitDialog" Control="Finish" Event="DoAction" Value="LaunchBrowser">
        WIXUI_EXITDIALOGOPTIONALCHECKBOX2 = 1 and NOT Installed
      </Publish>
    </UI>
	  
  </Product>
</Wix>
